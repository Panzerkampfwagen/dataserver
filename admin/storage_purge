#!/usr/bin/php
<?
//
// Purge storage files no longer in use
//
// storage_existing_files needs to be run first!

$sanityCheck = true;
$sanityCheckInterval = 20000;

set_include_path("../include");
require("header.inc.php");
require("AWS-SDK/sdk.class.php");
$S3 = new AmazonS3;

if (empty($argv[1])) {
	die("lastAdded timestamp not provided\n");
}

$lastAdded = $argv[1];

// Get files that aren't on any shards and that were last added before the specified date.
$sql = "SELECT * FROM storageFiles LEFT JOIN storageFilesExisting SFE USING (storageFileID) WHERE SFE.storageFileID IS NULL AND lastAdded < ? LIMIT 100000";
$rows = Zotero_DB::query($sql, $lastAdded);

$total = 0;

$shardIDs = Zotero_DB::columnQuery("SELECT shardID FROM shards S JOIN shardHosts SH USING (shardHostID) WHERE SH.state='up' AND S.state='up' ORDER BY shardID");

while ($files = array_splice($rows, 0, 1000)) {
	$ids = array();
	$objects = array();
	$check = $sanityCheck;
	foreach ($files as $file) {
		// Check all shards for each nth file
		if ($check && $total % $sanityCheckInterval == 0) {
			echo "Checking shards for file {$file['storageFileID']}\n";
			foreach ($shardIDs as $shardID) {
				$sql = "SELECT COUNT(*) FROM storageFileItems WHERE storageFileID=?";
				if (Zotero_DB::columnQuery($sql, $file['storageFileID'], $shardID)) {
					throw new Exception("FOUND!");
				}
			}
			$check = false;
		}
		
		$objects[] = array(
			"key" => Zotero_S3::getPathPrefix($file['hash'], $file['zip']) . $file['filename']
		);
		$ids[] = $file['storageFileID'];
	}
	
	$response = $S3->deleteObjects(Z_CONFIG::$S3_BUCKET, array(
		"quiet" => true,
		"objects" => $objects
	));
	
	if (!$response->isOK()) {
		var_dump($response->status);
		die ($response->body->asXML());
	}
	
	$sql = "DELETE FROM storageFiles WHERE storageFileID IN "
			. "(" . implode(', ', array_fill(0, sizeOf($ids), '?')) . ")";
	Zotero_DB::query($sql, $ids);
	
	echo "Deleted " . sizeOf($ids) . " files\n";
	$total += sizeOf($ids);
	
	sleep(1);
}

echo "===============================\n";
echo "Deleted $total files in total\n";
